This example demonstrates how easy it is to configure a web driver apart from the Xebium Selenium Driver Fixture.

First set up an alternative web-driver provider:

!| script | default web driver supplier |
| set browser | ${BROWSER} |
| $webDriver= | new web driver |

Then run the scripts. Note the url next to the fixture name.

!| script | selenium driver fixture |
| start driver | $webDriver | on url | http://localhost:${FITNESSE_SUT_PORT}/ |
| ensure | do | open | on | ${PAGE_PATH}.${PAGE_NAME} |
| check | is | verifyTitle | ${PAGE_PATH}.${PAGE_NAME} |
| check | is | verifyTitle | on | ${PAGE_PATH}.${PAGE_NAME} |
| ensure | do | verifyTextPresent | on | Xebium |
| check | is | verifyText | on | css=ol.breadcrumb li:nth-of-type(3) | ${PAGE_NAME} |
| check | is | verifyText | on | css=ol.breadcrumb li:nth-of-type(3) | with | ${PAGE_NAME} |
| note | do not ''stop browser'' as it will prevent the selenium driver from restarting. |

Use the same !-WebDriver-! instance again, from a different fixture this time.

!| script | selenium driver fixture |
| start driver | $webDriver | on url | http://localhost:${FITNESSE_SUT_PORT}/ |
| ensure | do | open | on | ${PAGE_PATH}.${PAGE_NAME} |
| check | is | verifyTitle | ${PAGE_PATH}.${PAGE_NAME} |
| check | is | verifyTitle | on | ${PAGE_PATH}.${PAGE_NAME} |
| ensure | do | verifyTextPresent | on | Xebium |
| check | is | verifyText | on | css=ol.breadcrumb li:nth-of-type(3) | ${PAGE_NAME} |
| check | is | verifyText | on | css=ol.breadcrumb li:nth-of-type(3) | with | ${PAGE_NAME} |
| stop browser |
